# Generated by Django 5.2 on 2025-06-07 06:15

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('diary', '0015_analyticspackage_marketplaceplacement_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='entry',
            name='summary_generated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='journal',
            name='ai_enhancements_used',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='journal',
            name='compilation_method',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='journal',
            name='has_ai_connections',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='journal',
            name='has_ai_introductions',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='journal',
            name='has_ai_questions',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='journal',
            name='has_readers_guide',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='journal',
            name='journal_type',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='entry_type',
            field=models.CharField(choices=[('original', 'Original Entry'), ('introduction', 'Chapter Introduction'), ('reflection', 'Reflection Questions'), ('guide', "Reader's Guide"), ('connection', 'Thematic Connection')], default='original', max_length=20),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='is_ai_generated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='journalentry',
            name='original_entry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_versions', to='diary.entry'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='published_in_journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_entries', to='diary.journal'),
        ),
        migrations.CreateModel(
            name='AIGenerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generation_type', models.CharField(choices=[('analysis', 'Entry Analysis'), ('structure', 'Journal Structure'), ('introduction', 'Chapter Introduction'), ('questions', 'Reflection Questions'), ('connections', 'Thematic Connections'), ('guide', "Reader's Guide"), ('marketing', 'Marketing Copy')], max_length=20)),
                ('input_prompt', models.TextField()),
                ('input_metadata', models.JSONField(blank=True, default=dict)),
                ('generated_content', models.TextField()),
                ('generation_metadata', models.JSONField(blank=True, default=dict)),
                ('success', models.BooleanField(default=True)),
                ('user_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('generation_time', models.FloatField(default=0)),
                ('token_count', models.IntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Generation Log',
                'verbose_name_plural': 'AI Generation Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='journalentry',
            name='ai_generation_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='diary.aigenerationlog'),
        ),
        migrations.CreateModel(
            name='JournalCompilationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('compilation_method', models.CharField(choices=[('ai', 'AI Smart Compilation'), ('thematic', 'Thematic Collection'), ('chronological', 'Timeline Journey')], max_length=20)),
                ('journal_type', models.CharField(choices=[('growth', 'Personal Growth'), ('travel', 'Travel & Adventures'), ('career', 'Career Development'), ('relationships', 'Relationships & Love'), ('creative', 'Creative Process'), ('health', 'Health & Wellness'), ('family', 'Family Life'), ('learning', 'Learning & Education')], max_length=20)),
                ('ai_enhancements', models.JSONField(blank=True, default=list)),
                ('generated_structure', models.JSONField(blank=True, default=dict)),
                ('analysis_results', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('started', 'Started'), ('analyzing', 'Analyzing'), ('structuring', 'Generating Structure'), ('ready', 'Ready to Publish'), ('published', 'Published'), ('abandoned', 'Abandoned')], default='started', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('published_journal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='diary.journal')),
                ('selected_entries', models.ManyToManyField(blank=True, to='diary.entry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compilation_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Journal Compilation Session',
                'verbose_name_plural': 'Journal Compilation Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='journal',
            name='compilation_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compiled_journals', to='diary.journalcompilationsession'),
        ),
        migrations.CreateModel(
            name='JournalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('transformation', 'Personal Transformation'), ('adventure', 'Adventure & Travel'), ('creative', 'Creative Journey'), ('reflection', 'Mindful Reflection'), ('relationship', 'Relationship Chronicles'), ('career', 'Professional Development'), ('custom', 'Custom Template')], max_length=20)),
                ('description', models.TextField()),
                ('chapter_structure', models.JSONField(default=list)),
                ('success_rate', models.IntegerField(default=85, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('average_price', models.DecimalField(decimal_places=2, default=9.99, max_digits=6)),
                ('estimated_word_count', models.IntegerField(default=5000)),
                ('usage_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Journal Template',
                'verbose_name_plural': 'Journal Templates',
                'ordering': ['-success_rate', '-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='JournalAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compilation_method', models.CharField(blank=True, max_length=20)),
                ('journal_type', models.CharField(blank=True, max_length=20)),
                ('total_words', models.IntegerField(default=0)),
                ('total_entries', models.IntegerField(default=0)),
                ('average_entry_length', models.IntegerField(default=0)),
                ('quality_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('readability_score', models.FloatField(default=0)),
                ('theme_diversity', models.IntegerField(default=0)),
                ('view_count_weekly', models.IntegerField(default=0)),
                ('like_count_weekly', models.IntegerField(default=0)),
                ('purchase_count_weekly', models.IntegerField(default=0)),
                ('revenue_weekly', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('average_read_time', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0)),
                ('conversion_rate', models.FloatField(default=0)),
                ('reader_rating', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('journal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='diary.journal')),
                ('template_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='diary.journaltemplate')),
            ],
            options={
                'verbose_name': 'Journal Analytics',
                'verbose_name_plural': 'Journal Analytics',
            },
        ),
    ]
