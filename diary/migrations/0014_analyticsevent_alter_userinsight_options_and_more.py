# Generated by Django 5.2 on 2025-05-29 01:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('diary', '0013_userprofile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('entry_created', 'Entry Created'), ('entry_updated', 'Entry Updated'), ('mood_logged', 'Mood Logged'), ('tags_added', 'Tags Added'), ('insights_viewed', 'Insights Viewed'), ('insights_regenerated', 'Insights Regenerated')], max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AlterModelOptions(
            name='userinsight',
            options={'ordering': ['-priority', '-created_at']},
        ),
        migrations.AddField(
            model_name='entry',
            name='energy_level',
            field=models.IntegerField(blank=True, help_text='Rate your energy level from 1 (exhausted) to 10 (energized)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='entry',
            name='mood_rating',
            field=models.IntegerField(blank=True, help_text='Rate your mood from 1 (terrible) to 10 (amazing)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='entry',
            name='word_count',
            field=models.PositiveIntegerField(default=0, editable=False),
        ),
        migrations.AddField(
            model_name='tag',
            name='category',
            field=models.CharField(choices=[('emotion', 'Emotion'), ('activity', 'Activity'), ('person', 'Person'), ('location', 'Location'), ('goal', 'Goal'), ('challenge', 'Challenge'), ('achievement', 'Achievement'), ('other', 'Other')], default='other', max_length=20),
        ),
        migrations.AddField(
            model_name='tag',
            name='usage_count',
            field=models.PositiveIntegerField(default=0, editable=False),
        ),
        migrations.AddField(
            model_name='userinsight',
            name='confidence_score',
            field=models.FloatField(default=0.0, help_text='AI confidence in this insight (0.0 to 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='userinsight',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='userinsight',
            name='related_entries',
            field=models.ManyToManyField(blank=True, related_name='insights', to='diary.entry'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='mood',
            field=models.CharField(blank=True, choices=[('excited', 'Excited'), ('happy', 'Happy'), ('content', 'Content'), ('neutral', 'Neutral'), ('anxious', 'Anxious'), ('sad', 'Sad'), ('angry', 'Angry'), ('confused', 'Confused'), ('grateful', 'Grateful'), ('overwhelmed', 'Overwhelmed')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='userinsight',
            name='insight_type',
            field=models.CharField(choices=[('mood_analysis', 'Mood Analysis'), ('pattern', 'Pattern Detection'), ('suggestion', 'Suggestion'), ('topic_analysis', 'Topic Analysis'), ('writing_style', 'Writing Style Analysis'), ('emotional_trends', 'Emotional Trends'), ('productivity', 'Productivity Insights')], max_length=50),
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['user', 'created_at'], name='diary_entry_user_id_2e1525_idx'),
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['user', 'mood'], name='diary_entry_user_id_a326d3_idx'),
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['created_at'], name='diary_entry_created_38eee5_idx'),
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['user', 'mood_rating'], name='diary_entry_user_id_81be28_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['user', 'category'], name='diary_tag_user_id_ca0fb1_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['user', 'usage_count'], name='diary_tag_user_id_9d4919_idx'),
        ),
        migrations.AddIndex(
            model_name='userinsight',
            index=models.Index(fields=['user', 'insight_type'], name='diary_useri_user_id_a7efbe_idx'),
        ),
        migrations.AddIndex(
            model_name='userinsight',
            index=models.Index(fields=['user', 'created_at'], name='diary_useri_user_id_623d54_idx'),
        ),
        migrations.AddIndex(
            model_name='userinsight',
            index=models.Index(fields=['user', 'priority'], name='diary_useri_user_id_4f69f8_idx'),
        ),
        migrations.AddField(
            model_name='analyticsevent',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='analyticsevent',
            index=models.Index(fields=['user', 'event_type', 'timestamp'], name='diary_analy_user_id_8d67dd_idx'),
        ),
    ]
